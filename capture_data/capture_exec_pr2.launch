<launch>

  <!-- TODO Add support for right OR left arm -->

  <node type="pr2_se_exec.py"
        pkg="pr2_se_calibration_launch"
        name="calibration_exec"
        args="$(find pr2_se_calibration_launch)/capture_data/samples_pr2_se_right $(find pr2_se_calibration_launch)/capture_data/hardware_config_right"
        output="screen" >

    <remap from="forearm_right_rect/camera_info" to="r_forearm_cam/camera_info"/>
    <remap from="forearm_right_rect/image_rect"  to="r_forearm_cam/image_rect"/>
    <remap from="forearm_right_rect/image"       to="r_forearm_cam/image_raw"/>
    <remap from="forearm_right_rect/features"    to="r_forearm_cam/features"/>

    <remap from="kinect_rect/camera_info" to="camera/rgb/camera_info"/>
    <remap from="kinect_rect/image_rect"  to="camera/rgb/image_rect_throttle"/>
    <remap from="kinect_rect/image"       to="camera/rgb/image_rect_throttle"/>
    <remap from="kinect_rect/features"    to="camera/rgb/features"/>

    <remap from="prosilica_rect/camera_info" to="prosilica/camera_info"/>
    <remap from="prosilica_rect/image_rect"  to="prosilica/image_rect"/>
    <remap from="prosilica_rect/image"       to="prosilica/image_raw"/>
    <remap from="prosilica_rect/features"    to="prosilica/features"/>

    <remap from="tilt_laser/image_features" to="tilt_laser/laser_checkerboard"/>
    <remap from="tilt_laser/laser_interval" to="tilt_laser/laser_checkerboard_interval"/>
    <remap from="tilt_laser/snapshot"       to="tilt_laser/dense_laser_snapshot"/>
    <remap from="tilt_laser/laser_image"    to="tilt_laser/cb_image"/>
    <remap from="tilt_laser/joint_features" to="tilt_laser/joint_state_features" />

    <remap from="tilt_laser_7x6/image_features" to="tilt_laser_7x6/laser_checkerboard"/>
    <remap from="tilt_laser_7x6/laser_interval" to="tilt_laser_7x6/laser_checkerboard_interval"/>
    <remap from="tilt_laser_7x6/snapshot"       to="tilt_laser_7x6/dense_laser_snapshot"/>
    <remap from="tilt_laser_7x6/laser_image"    to="tilt_laser_7x6/cb_annotated_image"/>
    <remap from="tilt_laser_7x6/joint_features" to="tilt_laser_7x6/joint_state_features" />

  </node>

  <node type="urdf_pub.py" pkg="calibration_launch" name="urdf_pub"/>

  <node type="record" pkg="rosbag" name="robot_measurement_recorder" output="screen"
        args="-O /tmp/pr2_calibration/cal_measurements robot_measurement robot_description" >
    <!-- Hack to create the directory -->
    <param name="mkdir_tmp" command="mkdir -m 777 -p /tmp/pr2_calibration" />
  </node>

</launch>
